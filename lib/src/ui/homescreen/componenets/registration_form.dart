import 'dart:convert';
import 'dart:io';
import 'package:cricket_scorecard/src/ui/homescreen/componenets/success_screen.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:http/http.dart' as http;
import 'package:url_launcher/url_launcher.dart';

class RegistrationForm extends StatefulWidget {
  @override
  _RegistrationFormState createState() => _RegistrationFormState();
}

class _RegistrationFormState extends State<RegistrationForm> {
  final _formKey = GlobalKey<FormState>();

  final nameController = TextEditingController();
  final phoneController = TextEditingController();
  final addressController = TextEditingController();
  final categoryController = TextEditingController();
  final specialityController = TextEditingController();
  final areaController = TextEditingController();
  final districtController = TextEditingController();
  final nidController = TextEditingController();
  final birthDateController = TextEditingController();
  final bkashAccountController = TextEditingController();
  final bkashTransactionIdController = TextEditingController();

  // Variables to store image data for web and mobile
  XFile? _chosenImage; // For mobile
  String? _webImageDataUrl; // For web
  final List<String> areaOptions = ['Local', 'Semi-Local', 'Overseas'];
  String? selectedArea;

  final List<String> categoryOptions = ['A', 'B', 'C'];
  final List<String> specialityOptions = ['Bowler', 'Batsman', 'All-Rounder'];

// тФАтФАтФАтФАтФА currently chosen items тФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФАтФА
  String? selectedCategory;
  String? selectedSpeciality;

  // Image picker instance
  final ImagePicker picker = ImagePicker();

  Future<void> selectImage() async {
    // Pick an image (this works for both mobile and web)
    XFile? pickedFile = await picker.pickImage(source: ImageSource.gallery);

    if (pickedFile != null) {
      if (kIsWeb) {
        Uint8List imageBytes = await pickedFile.readAsBytes();
        String base64Image =
            "data:image/jpeg;base64," + base64Encode(imageBytes);

        setState(() {
          _webImageDataUrl = base64Image;
        });
      } else {
        setState(() {
          _chosenImage = pickedFile; // Store the XFile for mobile
        });
      }
    }
  }

  Future<void> submitForm() async {
    if (_formKey.currentState!.validate()) {
      if (selectedCategory == null ||
          selectedSpeciality == null ||
          selectedArea == null) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
              content: Text('Please select Area, Category, and Speciality')),
        );
        return;
      }

      final uri = Uri.parse('https://backend.dplt10.org/register_user/');
      var request = http.MultipartRequest('POST', uri);

      request.fields['name'] = nameController.text;
      request.fields['bkash_number'] = bkashAccountController.text;
      request.fields['bkash_transaction_id'] =
          bkashTransactionIdController.text;
      request.fields['phone_number'] = phoneController.text;
      request.fields['address'] = addressController.text;
      request.fields['district'] = districtController.text;
      request.fields['nid_or_birth_certificate_no'] = nidController.text;
      request.fields['date_of_birth'] = birthDateController.text;
      request.fields['area'] =
          selectedArea!; // Still string, but backend should allow it
      request.fields['player_category'] = selectedCategory!;
      request.fields['speciality'] = selectedSpeciality!;

      // Add image file (only if it's available)
      if (_chosenImage != null) {
        var photo = await http.MultipartFile.fromPath(
            'player_photo', _chosenImage!.path);
        request.files.add(photo);
      } else if (_webImageDataUrl != null) {
        request.fields['player_photo'] = _webImageDataUrl!;
      }

      try {
        var response = await request.send();

        // Get the raw response body
        var responseBody = await response.stream.bytesToString();
        print('Raw response body: $responseBody');

        // Try to decode it as JSON
        try {
          var data = jsonDecode(responseBody);

          if (data is Map) {
            var id = data['id']; // assuming 'id' is a field in your response
            if (id != null && id is int) {
              print('Successfully registered with id: $id');
              // Navigate to the success screen with the user ID
              Navigator.push(
                context,
                MaterialPageRoute(
                  builder: (context) => SuccessScreen(userId: id),
                ),
              );
            } else {
              print('ID is missing or not an integer');
            }
          } else {
            print('Expected Map but received something else');
          }
        } catch (e) {
          print('Error decoding response: $e');
        }
      } catch (e) {
        print('Error submitting form: $e');
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Error occurred: $e')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(centerTitle: true, title: Text('Player Registration')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: SingleChildScrollView(
          child: Column(
            children: [
              // Show selected image (either web or mobile)
              Center(
                child: ElevatedButton.icon(
                  onPressed: () {
                    showDialog(
                      context: context,
                      builder: (BuildContext context) {
                        return AlertDialog(
                            title: Text('Important Information'),
                            content: SingleChildScrollView(
                              child: RichText(
                                text: TextSpan(
                                  style: TextStyle(
                                      fontSize: 16,
                                      color: Colors.black), // default style
                                  children: [
                                    TextSpan(
                                        text:
                                            "тЪб DPL Season-6 ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржУ ржирж┐рж▓рж╛ржо \nтЪбЁЯПП ржкрзНрж░рж┐ржпрж╝ ржХрзНрж░рж┐ржХрзЗржЯ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржмрзГржирзНржж,\nржЖрж╢рж╛ ржХрж░рж┐ рж╕ржХрж▓рзЗ рж╕рзБрж╕рзНрже ржУ ржнрж╛рж▓рзЛ ржЖржЫрзЗржиред ржЖржкржирж╛ржжрзЗрж░ ржмрж╣рзБрж▓ ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд DPL (Season-6) ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗрж░ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╢рзБрж░рзБ рж╣ржпрж╝рзЗржЫрзЗред\nтЪая╕П ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржирзЛржЯрж┐рж╢: ржирж┐ржорзЗрж╛ржХрзНржд рждржерзНржпржЧрзБрж▓рзЗрж╛ ржнрж╛рж▓рзЗрж╛ржнрж╛ржмрзЗ ржкрзЬрзЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛ рж╕ржорзНржкрзВтАНрж░рзНржг ржХрж░рзБржиред ржХрзЛржи ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржмрзНржпрждрзАржд ржПржЗ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ред ржПржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░рж╕рж╣ рж╕ржХрж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░рзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрзЗрж╛ржЬрзНржпред\nЁЯПЖ ржорзВрж▓ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯ: рзжрзн ржиржнрзЗржорзНржмрж░ - рззрзи ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзл рждрж╛ржЗ ржПржЗ рж╕ржорзЯрзЗрж░ ржоржзрзНржпрзЗ ржпрж╛рж░рж╛ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи рж╢рзБржзрзБржорж╛рждрзНрж░ рждрж╛ржБржжрзЗрж░ржХрзЗржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржЖрж╣ржмрж╛ржи ржХрж░рж╛ рж╣рж▓рзЗрж╛ред\nЁЯТе ржПржЦржиржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи ржПржмржВ ржЖржкржирж╛рж░ ржХрзНрж░рж┐ржХрзЗржЯ рж╕рзНржмржкрзНржиржХрзЗ ржмрж╛рж╕рзНрждржм ржХрж░рзБржи!\nЁЯУЛ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржУ ржлрж┐:ЁЯПарж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзирзжрзж ржЯрж╛ржХрж╛ (ржЕржлрзЗрж░рждржпрзЛржЧрзНржп)\nЁЯМР ржпрзЛржЧрзНржпрждрж╛рж░ ржПрж▓рж╛ржХрж╛: ржмрж▓рж░рж╛ржоржкрзБрж░, ржХрж╛рж╢рж┐ржирж╛ржержкрзБрж░ ржУ ржЬржпрж╝ржкрзБрж░рзЗрж░ рж╕рзНржерж╛ржпрж╝рзА ржмрж╛рж╕рж┐ржирзНржжрж╛\nЁЯМН рж╕рзЗржорж┐-рж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзирзжрзж ржЯрж╛ржХрж╛ (ржЕржлрзЗрж░рждржпрзЛржЧрзНржп)тХ░тФИтЮд West Zone: ржзржиржкрзБрж░, рж░ржВржкрзБрж░, ржмрж╛рждрж╛ржмрж╛ржбрж╝рж┐ржпрж╝рж╛, ржЪрж╛ржЩрзНржЧрж┐ржирзА, ржЖрж▓ржоржкрзБрж░ ржкрзВрж░рзНржмтХ░тФИтЮд East Zone: ржжрзМрж▓рждржкрзБрж░, ржЫрж╛ржпрж╝рж╛ржмрж┐рждрж╛ржи, ржЧрзЛржмрж┐ржирзНржжржкрзБрж░, рж╣рж╛ржбрж╝рж╛рждрж▓рзА, ржмрзЗрж▓рждрж▓рзА (рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рзНржерж╛ржпрж╝рзА ржмрж╛рж╕рж┐ржирзНржжрж╛рж░рж╛)\nтЬИя╕П ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзйрзжрзж ржЯрж╛ржХрж╛(рж╢рж░рзНрждрж╕рж╛ржкрзЗржХрзНрж╖рзЗ ржлрзЗрж░рждржпрзЛржЧрзНржп)\nЁЯМР ржпрзЛржЧрзНржпрждрж╛рж░ ржПрж▓рж╛ржХрж╛: рж╕ржоржЧрзНрж░ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢\nЁЯТ░ рж░рж┐ржлрж╛ржирзНржб ржирзАрждрж┐\nтЪая╕П ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ ржЬржирзНржп ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржмрж┐ржЬрзНржЮржкрзНрждрж┐: ржпрзЗ рж╕ржХрж▓ ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзЗржУ ржкрзБрж░рзЛ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржХрзЛржирзЛ ржЯрж┐ржорзЗ рж╕рзНржерж╛ржи ржкрж╛ржмрзЗржи ржирж╛, рждрж╛ржжрзЗрж░ рзлрзж% рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ ржХрзНрж▓рзЛржЬрж┐ржВ ржЕржирзБрж╖рзНржарж╛ржирзЗ ржлрзЗрж░ржд ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗред\nЁЯУЕ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рждрж╛рж░рж┐ржЦрж╕ржорзВрж╣\nЁЯУЭ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗрж░ рж╢рзЗрж╖ рждрж╛рж░рж┐ржЦ: рзжрзл ржЬрзБрж▓рж╛ржЗ, рзирзжрзирзл (рж░рж╛ржд рззрзз:рзлрзп ржкрж░рзНржпржирзНржд)\nЁЯОк ржирж┐рж▓рж╛ржо ржЕржирзБрж╖рзНржарж╛ржи: рззрзо ржЬрзБрж▓рж╛ржЗ, рзирзжрзирзл\nЁЯУМ рж╕рзНржерж╛ржи: ржмрзНржпрзБрж░рзЛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржбрж┐ржнрж┐рж╢ржирж╛рж▓ ржЕржлрж┐рж╕, ржЕржбрж┐ржЯрзЛрж░рж┐ржпрж╝рж╛ржо рж░рзБржоЁЯМР ... ",
                                        style: TextStyle(
                                          fontSize: 16,
                                          fontFamily: 'Roboto',
                                        )),
                                    TextSpan(
                                      text:
                                          ' https://maps.app.goo.gl/Yu3gi3FiZinoXKNP9\n\n',
                                      style: TextStyle(
                                        color: Colors.blue,
                                        decoration: TextDecoration.underline,
                                      ),
                                      recognizer: TapGestureRecognizer()
                                        ..onTap = () async {
                                          final Uri url = Uri.parse(
                                              'https://maps.app.goo.gl/Yu3gi3FiZinoXKNP9');
                                          if (await canLaunchUrl(url)) {
                                            await launchUrl(url,
                                                mode: LaunchMode
                                                    .externalApplication);
                                          }
                                        },
                                    ),

                                    TextSpan(
                                        text:
                                            "тЪб ЁЯПЖ ржорзВрж▓ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯ: рзжрзн ржиржнрзЗржорзНржмрж░ - рззрзи ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзлЁЯОп ржкрзНрж▓рзЗржпрж╝рж╛рж░ ржирж┐рж░рзНржмрж╛ржЪржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржкрзНрж░рждрж┐ржЯрж┐ ржжрж▓ ржирж┐рж▓рж╛ржорзЗрж░ ржорж╛ржзрзНржпржорзЗ рж▓рзЛржХрж╛рж▓ ржУ рж╕рзЗржорж┐-рж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ ржоржзрзНржп ржерзЗржХрзЗ ржкржЫржирзНржжрзЗрж░ ржЦрзЗрж▓рзЛржпрж╝рж╛ржбрж╝ржжрзЗрж░ ржжрж▓рзЗ ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗредЁЯУЭ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рж╛рж░ ржирж┐ржпрж╝ржоржзрж╛ржк\n\n рзз: ржПржЗ 01327-641252 (Fahim Traders) ржиржорзНржмрж░рзЗ ржирж┐тАНрж░рзНржзрж╛рж░рж┐ржд рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ bKash ржерзЗржХрзЗ ржкрзЗржорзЗржирзНржЯ ржХрж░рзБржи ржПржмржВ ржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ржЖржЗржбрж┐ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржиредржзрж╛ржк\n рзи: ЁЯФЧ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж▓рж┐ржВржХрзЗ ржЧрж┐ржпрж╝рзЗ рж╕ржХрж▓ рждржерзНржп рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрзВрж░ржг ржХрж░рзБржиредржзрж╛ржк \n рзй: тЬЕ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкрзВрж░рзНржг рж╣рж▓рзЗ ржЖржкржирж╛рж░ ржбрж╛ржЯрж╛рж░ ржПржХржЯрж┐ ржЗржорзЗржЬ ржкрж╛ржмрзЗржи ржбрж╛ржЙржирж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред \n рзк: ЁЯУ╕ ржбрж╛ржЙржирж▓рзЛржбржХрзГржд ржЗржорзЗржЬржЯрж┐ ржжрж┐ржпрж╝рзЗ ржЖржкржирж╛рж░ ржЕржирзБржнрзВрждрж┐ DPL Fan Arena  ржЧрзНрж░рзБржкрзЗ ржкрзЛрж╕рзНржЯ ржХрж░рзБржи ",
                                        style: TextStyle(
                                          fontSize: 16,
                                          fontFamily: 'Roboto',
                                        )),

                                    TextSpan(
                                      text:
                                          'https://www.facebook.com/groups/1860853024771742/',
                                      style: TextStyle(
                                        color: Colors.blue,
                                        decoration: TextDecoration.underline,
                                      ),
                                      recognizer: TapGestureRecognizer()
                                        ..onTap = () async {
                                          final Uri url = Uri.parse(
                                              'https://www.facebook.com/groups/1860853024771742/');
                                          if (await canLaunchUrl(url)) {
                                            await launchUrl(url,
                                                mode: LaunchMode
                                                    .externalApplication);
                                          }
                                        },
                                    ),
                                    TextSpan(
                                        text:
                                            "ржпрзЛржЧрж╛ржпрзЛржЧржЖрж░ржУ рждржерзНржпрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи:ЁЯУз DPL-Deedar Premier League ржкрзЗржЗржЬрзЗрж░ ржЗржиржмржХрзНрж╕ ржХрж░рзБржиредржЕржержмрж╛,\n",
                                        style: TextStyle(
                                          fontSize: 16,
                                          fontFamily: 'Roboto',
                                        )),

                                    TextSpan(
                                      text: 'тШОя╕П рзжрззрзнрзкрзмрзнрзжрзорзлрзйрзо тШОя╕П ,',
                                      style: TextStyle(
                                        color: Colors.blue,
                                        decoration: TextDecoration.underline,
                                      ),
                                      recognizer: TapGestureRecognizer()
                                        ..onTap = () async {
                                          final Uri phoneUri = Uri(
                                              scheme: 'tel',
                                              path: '01746708538');
                                          if (await canLaunchUrl(phoneUri)) {
                                            await launchUrl(phoneUri);
                                          }
                                        },
                                    ),
                                    TextSpan(
                                      text: 'тШОя╕ПрзжрззрзорззрзирзлрзлрзнрзирзкрзотШОя╕П\n\n,',
                                      style: TextStyle(
                                        color: Colors.blue,
                                        decoration: TextDecoration.underline,
                                      ),
                                      recognizer: TapGestureRecognizer()
                                        ..onTap = () async {
                                          final Uri phoneUri = Uri(
                                              scheme: 'tel',
                                              path: '01812557248');
                                          if (await canLaunchUrl(phoneUri)) {
                                            await launchUrl(phoneUri);
                                          }
                                        },
                                    ),

                                    TextSpan(
                                        text:
                                            " ржкрзНрж░рж┐ржпрж╝ ржХрзНрж░рж┐ржХрзЗржЯ ржкрзНрж░рзЗржорзАрж░рж╛, ржжрзЗрж░рж┐ ржирж╛ ржХрж░рзЗ ржЖржЬржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи!ржоржирзЗ рж░рж╛ржЦржмрзЗржи, рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржЫрж╛ржбрж╝рж╛ ржХрзЗржЙ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржЦрзЗрж▓рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ - рждрж╛ржЗ ржЕржмрж╢рзНржпржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзБржи!DPL Season-6 рж╣ржмрзЗ ржПржХ ржЕрж╕рж╛ржзрж╛рж░ржг ржХрзНрж░рж┐ржХрзЗржЯ ржЙрзОрж╕ржмред ржЖржкржирж╛рж░ ржкрзНрж░рждрж┐ржнрж╛ ржжрзЗржЦрж╛ржирзЛрж░ ржПржЗ рж╕рзБржпрзЛржЧ рж╣рж╛рждржЫрж╛ржбрж╝рж╛ ржХрж░ржмрзЗржи ржирж╛редрж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗрж░ рж╕ржоржпрж╝ ржЦрзБржмржЗ ржХржо ржЖржЧрж╛ржорзА рзжрзл ржЬрзБрж▓рж╛ржЗржпрж╝рзЗрж░ ржоржзрзНржпрзЗ ржЕржмрж╢рзНржпржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзБржи!ржЖржкржирж╛рж░ ржмржирзНржзрзБржжрзЗрж░ржУ ржЬрж╛ржирж╛ржи ржПржмржВ ржПржХрж╕рж╛ржерзЗ DPL Season-6 ржПрж░ ржЕржВрж╢ рж╣ржпрж╝рзЗ ржЙржарзБржи!ржбрж┐ржкрж┐ржПрж▓ рж╕рж┐ржЬржи-рзм ржП рж╕ржХрж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ рж╕рзНржмрж╛ржЧрждржо! ЁЯОЙрж╕ржХрж▓ ржирж┐ржпрж╝ржоржХрж╛ржирзБржи рж╕рж╛ржкрзЗржХрзНрж╖рзЗ ржкрж░рж┐ржмрж░рзНрждржиржпрзЛржЧрзНржпред ржЪрзВржбрж╝рж╛ржирзНржд ржирж┐ржпрж╝ржорж╛ржмрж▓рзА ржЦрзБржм рж╢рзАржШрзНрж░ржЗ ржШрзЛрж╖ржгрж╛ ржХрж░рж╛ рж╣ржмрзЗред#DPLSeason6 #CricketRegistration #DeedarPremierLeague #JoinNow #CricketBangladesh=================================================",
                                        style: TextStyle(
                                          fontSize: 16,
                                          fontFamily: 'Roboto',
                                        )),

                                    // Add more spans as needed...
                                  ],
                                ),
                              ),
                            ),
                            actions: [
                              Center(
                                  child: ElevatedButton(
                                style: ButtonStyle(
                                  backgroundColor:
                                      MaterialStateProperty.all<Color>(
                                          Colors.blueAccent),
                                ),
                                onPressed: () {
                                  Navigator.pop(context);
                                },
                                child: Text("Ok",
                                    style: TextStyle(
                                      color: Colors.white,
                                      fontFamily: 'Roboto',
                                      fontSize: 16,
                                      fontWeight: FontWeight.bold,
                                    )),
                              ))
                            ]);
                      },
                    );
                  },
                  icon: const Icon(Icons.info_outline),
                  label: const Text(
                    "ржЬрж░рзБрж░рж┐ ржирж┐рж░рзНржжрзЗрж╢ржирж╛ ржУ рждржерзНржп(ржХрзНрж▓рж┐ржХ ржХрж░рзБржи)",
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.amber[600],
                    foregroundColor: Colors.black87,
                    padding: const EdgeInsets.symmetric(
                        horizontal: 20, vertical: 12),
                    shape: RoundedRectangleBorder(
                      borderRadius: BorderRadius.circular(30),
                    ),
                    elevation: 4,
                  ),
                ),
              ),

              // Row(
              //   mainAxisAlignment: MainAxisAlignment.center,
              //   children: [
              //     Text(
              //       'Please read carefully before registration',
              //       style: TextStyle(
              //           fontSize: 15,
              //           fontFamily: 'Roboto',
              //           fontWeight: FontWeight.w500,
              //           color: Colors.grey),
              //     ),
              //     IconButton(
              //       icon: Icon(Icons.info_outline, color: Colors.blue),
              //       onPressed: () {
              //         showDialog(
              //           context: context,
              //           builder: (BuildContext context) {
              //             return AlertDialog(
              //                 title: Text('Important Information'),
              //                 content: SingleChildScrollView(
              //                   child: RichText(
              //                     text: TextSpan(
              //                       style: TextStyle(
              //                           fontSize: 16,
              //                           color: Colors.black), // default style
              //                       children: [
              //                         TextSpan(
              //                             text:
              //                                 "тЪб DPL Season-6 ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржУ ржирж┐рж▓рж╛ржо тЪбЁЯПП ржкрзНрж░рж┐ржпрж╝ ржХрзНрж░рж┐ржХрзЗржЯ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржмрзГржирзНржж,ржЖрж╢рж╛ ржХрж░рж┐ рж╕ржХрж▓рзЗ рж╕рзБрж╕рзНрже ржУ ржнрж╛рж▓рзЛ ржЖржЫрзЗржиред ржЖржкржирж╛ржжрзЗрж░ ржмрж╣рзБрж▓ ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд DPL (Season-6) ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗрж░ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╢рзБрж░рзБ рж╣ржпрж╝рзЗржЫрзЗредтЪая╕П ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржирзЛржЯрж┐рж╢: ржирж┐ржорзЗрж╛ржХрзНржд рждржерзНржпржЧрзБрж▓рзЗрж╛ ржнрж╛рж▓рзЗрж╛ржнрж╛ржмрзЗ ржкрзЬрзЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржкрзНрж░ржХрзНрж░рж┐рзЯрж╛ рж╕ржорзНржкрзВтАНрж░рзНржг ржХрж░рзБржиред ржХрзЛржи ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржмрзНржпрждрзАржд ржПржЗ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ред ржПржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░рж╕рж╣ рж╕ржХрж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░рзЗрж░ ржЬржирзНржп ржкрзНрж░ржпрзЗрж╛ржЬрзНржпредЁЯПЖ ржорзВрж▓ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯ: рзжрзн ржиржнрзЗржорзНржмрж░ - рззрзи ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзл рждрж╛ржЗ ржПржЗ рж╕ржорзЯрзЗрж░ ржоржзрзНржпрзЗ ржпрж╛рж░рж╛ ржЕржВрж╢ржЧрзНрж░рж╣ржг ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи рж╢рзБржзрзБржорж╛рждрзНрж░ рждрж╛ржБржжрзЗрж░ржХрзЗржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рж╛рж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржЖрж╣ржмрж╛ржи ржХрж░рж╛ рж╣рж▓рзЗрж╛редЁЯТе ржПржЦржиржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи ржПржмржВ ржЖржкржирж╛рж░ ржХрзНрж░рж┐ржХрзЗржЯ рж╕рзНржмржкрзНржиржХрзЗ ржмрж╛рж╕рзНрждржм ржХрж░рзБржи!ЁЯУЛ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржУ ржлрж┐:ЁЯПарж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзирзжрзж ржЯрж╛ржХрж╛ (ржЕржлрзЗрж░рждржпрзЛржЧрзНржп)ЁЯМР ржпрзЛржЧрзНржпрждрж╛рж░ ржПрж▓рж╛ржХрж╛: ржмрж▓рж░рж╛ржоржкрзБрж░, ржХрж╛рж╢рж┐ржирж╛ржержкрзБрж░ ржУ ржЬржпрж╝ржкрзБрж░рзЗрж░ рж╕рзНржерж╛ржпрж╝рзА ржмрж╛рж╕рж┐ржирзНржжрж╛ЁЯМН рж╕рзЗржорж┐-рж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзирзжрзж ржЯрж╛ржХрж╛ (ржЕржлрзЗрж░рждржпрзЛржЧрзНржп)тХ░тФИтЮд West Zone: ржзржиржкрзБрж░, рж░ржВржкрзБрж░, ржмрж╛рждрж╛ржмрж╛ржбрж╝рж┐ржпрж╝рж╛, ржЪрж╛ржЩрзНржЧрж┐ржирзА, ржЖрж▓ржоржкрзБрж░ ржкрзВрж░рзНржмтХ░тФИтЮд East Zone: ржжрзМрж▓рждржкрзБрж░, ржЫрж╛ржпрж╝рж╛ржмрж┐рждрж╛ржи, ржЧрзЛржмрж┐ржирзНржжржкрзБрж░, рж╣рж╛ржбрж╝рж╛рждрж▓рзА, ржмрзЗрж▓рждрж▓рзА (рж╢рзБржзрзБржорж╛рждрзНрж░ рж╕рзНржерж╛ржпрж╝рзА ржмрж╛рж╕рж┐ржирзНржжрж╛рж░рж╛)тЬИя╕П ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐: рзйрзжрзж ржЯрж╛ржХрж╛(рж╢рж░рзНрждрж╕рж╛ржкрзЗржХрзНрж╖рзЗ ржлрзЗрж░рждржпрзЛржЧрзНржп)ЁЯМР ржпрзЛржЧрзНржпрждрж╛рж░ ржПрж▓рж╛ржХрж╛: рж╕ржоржЧрзНрж░ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ЁЯТ░ рж░рж┐ржлрж╛ржирзНржб ржирзАрждрж┐тЪая╕П ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ ржЬржирзНржп ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржмрж┐ржЬрзНржЮржкрзНрждрж┐: ржпрзЗ рж╕ржХрж▓ ржУржнрж╛рж░рж╕рзАржЬ ржкрзНрж▓рзЗржпрж╝рж╛рж░ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзЗржУ ржкрзБрж░рзЛ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржХрзЛржирзЛ ржЯрж┐ржорзЗ рж╕рзНржерж╛ржи ржкрж╛ржмрзЗржи ржирж╛, рждрж╛ржжрзЗрж░ рзлрзж% рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ ржХрзНрж▓рзЛржЬрж┐ржВ ржЕржирзБрж╖рзНржарж╛ржирзЗ ржлрзЗрж░ржд ржкрзНрж░ржжрж╛ржи ржХрж░рж╛ рж╣ржмрзЗредЁЯУЕ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг рждрж╛рж░рж┐ржЦрж╕ржорзВрж╣ЁЯУЭ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗрж░ рж╢рзЗрж╖ рждрж╛рж░рж┐ржЦ: рзжрзл ржЬрзБрж▓рж╛ржЗ, рзирзжрзирзл (рж░рж╛ржд рззрзз:рзлрзп ржкрж░рзНржпржирзНржд)ЁЯОк ржирж┐рж▓рж╛ржо ржЕржирзБрж╖рзНржарж╛ржи: рззрзо ржЬрзБрж▓рж╛ржЗ, рзирзжрзирзлЁЯУМ рж╕рзНржерж╛ржи: ржмрзНржпрзБрж░рзЛ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢ ржбрж┐ржнрж┐рж╢ржирж╛рж▓ ржЕржлрж┐рж╕, ржЕржбрж┐ржЯрзЛрж░рж┐ржпрж╝рж╛ржо рж░рзБржоЁЯМР ... ",
              //                             style: TextStyle(
              //                               fontSize: 16,
              //                               fontFamily: 'Roboto',
              //                             )),
              //                         TextSpan(
              //                           text:
              //                               ' https://maps.app.goo.gl/Yu3gi3FiZinoXKNP9\n\n',
              //                           style: TextStyle(
              //                             color: Colors.blue,
              //                             decoration: TextDecoration.underline,
              //                           ),
              //                           recognizer: TapGestureRecognizer()
              //                             ..onTap = () async {
              //                               final Uri url = Uri.parse(
              //                                   'https://maps.app.goo.gl/Yu3gi3FiZinoXKNP9');
              //                               if (await canLaunchUrl(url)) {
              //                                 await launchUrl(url,
              //                                     mode: LaunchMode
              //                                         .externalApplication);
              //                               }
              //                             },
              //                         ),
              //
              //                         TextSpan(
              //                             text:
              //                                 "тЪб ЁЯПЖ ржорзВрж▓ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯ: рзжрзн ржиржнрзЗржорзНржмрж░ - рззрзи ржбрж┐рж╕рзЗржорзНржмрж░, рзирзжрзирзлЁЯОп ржкрзНрж▓рзЗржпрж╝рж╛рж░ ржирж┐рж░рзНржмрж╛ржЪржи ржкрзНрж░ржХрзНрж░рж┐ржпрж╝рж╛ржкрзНрж░рждрж┐ржЯрж┐ ржжрж▓ ржирж┐рж▓рж╛ржорзЗрж░ ржорж╛ржзрзНржпржорзЗ рж▓рзЛржХрж╛рж▓ ржУ рж╕рзЗржорж┐-рж▓рзЛржХрж╛рж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ ржоржзрзНржп ржерзЗржХрзЗ ржкржЫржирзНржжрзЗрж░ ржЦрзЗрж▓рзЛржпрж╝рж╛ржбрж╝ржжрзЗрж░ ржжрж▓рзЗ ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗредЁЯУЭ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рж╛рж░ ржирж┐ржпрж╝ржоржзрж╛ржк\n рзз: ржПржЗ 01327-641252 (Fahim Traders) ржиржорзНржмрж░рзЗ ржирж┐тАНрж░рзНржзрж╛рж░рж┐ржд рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржлрж┐ bKash ржерзЗржХрзЗ ржкрзЗржорзЗржирзНржЯ ржХрж░рзБржи ржПржмржВ ржЯрзНрж░рж╛ржиржЬрзЗржХрж╢ржи ржЖржЗржбрж┐ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржиредржзрж╛ржк\n рзи: ЁЯФЧ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж▓рж┐ржВржХрзЗ ржЧрж┐ржпрж╝рзЗ рж╕ржХрж▓ рждржерзНржп рж╕ржарж┐ржХржнрж╛ржмрзЗ ржкрзВрж░ржг ржХрж░рзБржиредржзрж╛ржк \n рзй: тЬЕ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкрзВрж░рзНржг рж╣рж▓рзЗ ржЖржкржирж╛рж░ ржбрж╛ржЯрж╛рж░ ржПржХржЯрж┐ ржЗржорзЗржЬ ржкрж╛ржмрзЗржи ржбрж╛ржЙржирж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред ржзрж╛ржк\n рзк: ЁЯУ╕ ржбрж╛ржЙржирж▓рзЛржбржХрзГржд ржЗржорзЗржЬржЯрж┐ ржжрж┐ржпрж╝рзЗ ржЖржкржирж╛рж░ ржЕржирзБржнрзВрждрж┐ DPL Fan Arena  ржЧрзНрж░рзБржкрзЗ ржкрзЛрж╕рзНржЯ ржХрж░рзБржи ",
              //                             style: TextStyle(
              //                               fontSize: 16,
              //                               fontFamily: 'Roboto',
              //                             )),
              //
              //                         TextSpan(
              //                           text:
              //                               'https://www.facebook.com/groups/1860853024771742/',
              //                           style: TextStyle(
              //                             color: Colors.blue,
              //                             decoration: TextDecoration.underline,
              //                           ),
              //                           recognizer: TapGestureRecognizer()
              //                             ..onTap = () async {
              //                               final Uri url = Uri.parse(
              //                                   'https://www.facebook.com/groups/1860853024771742/');
              //                               if (await canLaunchUrl(url)) {
              //                                 await launchUrl(url,
              //                                     mode: LaunchMode
              //                                         .externalApplication);
              //                               }
              //                             },
              //                         ),
              //                         TextSpan(
              //                             text:
              //                                 "ржпрзЛржЧрж╛ржпрзЛржЧржЖрж░ржУ рждржерзНржпрзЗрж░ ржЬржирзНржп ржпрзЛржЧрж╛ржпрзЛржЧ ржХрж░рзБржи:ЁЯУз DPL-Deedar Premier League ржкрзЗржЗржЬрзЗрж░ ржЗржиржмржХрзНрж╕ ржХрж░рзБржиредржЕржержмрж╛,\n",
              //                             style: TextStyle(
              //                               fontSize: 16,
              //                               fontFamily: 'Roboto',
              //                             )),
              //
              //                         TextSpan(
              //                           text: 'тШОя╕П рзжрззрзнрзкрзмрзнрзжрзорзлрзйрзо тШОя╕П ,',
              //                           style: TextStyle(
              //                             color: Colors.blue,
              //                             decoration: TextDecoration.underline,
              //                           ),
              //                           recognizer: TapGestureRecognizer()
              //                             ..onTap = () async {
              //                               final Uri phoneUri = Uri(
              //                                   scheme: 'tel',
              //                                   path: '01746708538');
              //                               if (await canLaunchUrl(phoneUri)) {
              //                                 await launchUrl(phoneUri);
              //                               }
              //                             },
              //                         ),
              //                         TextSpan(
              //                           text: 'тШОя╕ПрзжрззрзорззрзирзлрзлрзнрзирзкрзотШОя╕П\n\n,',
              //                           style: TextStyle(
              //                             color: Colors.blue,
              //                             decoration: TextDecoration.underline,
              //                           ),
              //                           recognizer: TapGestureRecognizer()
              //                             ..onTap = () async {
              //                               final Uri phoneUri = Uri(
              //                                   scheme: 'tel',
              //                                   path: '01812557248');
              //                               if (await canLaunchUrl(phoneUri)) {
              //                                 await launchUrl(phoneUri);
              //                               }
              //                             },
              //                         ),
              //
              //                         TextSpan(
              //                             text:
              //                                 " ржкрзНрж░рж┐ржпрж╝ ржХрзНрж░рж┐ржХрзЗржЯ ржкрзНрж░рзЗржорзАрж░рж╛, ржжрзЗрж░рж┐ ржирж╛ ржХрж░рзЗ ржЖржЬржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржХрж░рзБржи!ржоржирзЗ рж░рж╛ржЦржмрзЗржи, рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи ржЫрж╛ржбрж╝рж╛ ржХрзЗржЙ ржЯрзБрж░рзНржирж╛ржорзЗржирзНржЯрзЗ ржЦрзЗрж▓рждрзЗ ржкрж╛рж░ржмрзЗржи ржирж╛ - рждрж╛ржЗ ржЕржмрж╢рзНржпржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзБржи!DPL Season-6 рж╣ржмрзЗ ржПржХ ржЕрж╕рж╛ржзрж╛рж░ржг ржХрзНрж░рж┐ржХрзЗржЯ ржЙрзОрж╕ржмред ржЖржкржирж╛рж░ ржкрзНрж░рждрж┐ржнрж╛ ржжрзЗржЦрж╛ржирзЛрж░ ржПржЗ рж╕рзБржпрзЛржЧ рж╣рж╛рждржЫрж╛ржбрж╝рж╛ ржХрж░ржмрзЗржи ржирж╛редрж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржирзЗрж░ рж╕ржоржпрж╝ ржЦрзБржмржЗ ржХржо ржЖржЧрж╛ржорзА рзжрзл ржЬрзБрж▓рж╛ржЗржпрж╝рзЗрж░ ржоржзрзНржпрзЗ ржЕржмрж╢рзНржпржЗ рж░рзЗржЬрж┐рж╕рзНржЯрзНрж░рзЗрж╢ржи рж╕ржорзНржкржирзНржи ржХрж░рзБржи!ржЖржкржирж╛рж░ ржмржирзНржзрзБржжрзЗрж░ржУ ржЬрж╛ржирж╛ржи ржПржмржВ ржПржХрж╕рж╛ржерзЗ DPL Season-6 ржПрж░ ржЕржВрж╢ рж╣ржпрж╝рзЗ ржЙржарзБржи!ржбрж┐ржкрж┐ржПрж▓ рж╕рж┐ржЬржи-рзм ржП рж╕ржХрж▓ ржкрзНрж▓рзЗржпрж╝рж╛рж░ржжрзЗрж░ рж╕рзНржмрж╛ржЧрждржо! ЁЯОЙрж╕ржХрж▓ ржирж┐ржпрж╝ржоржХрж╛ржирзБржи рж╕рж╛ржкрзЗржХрзНрж╖рзЗ ржкрж░рж┐ржмрж░рзНрждржиржпрзЛржЧрзНржпред ржЪрзВржбрж╝рж╛ржирзНржд ржирж┐ржпрж╝ржорж╛ржмрж▓рзА ржЦрзБржм рж╢рзАржШрзНрж░ржЗ ржШрзЛрж╖ржгрж╛ ржХрж░рж╛ рж╣ржмрзЗред#DPLSeason6 #CricketRegistration #DeedarPremierLeague #JoinNow #CricketBangladesh=================================================",
              //                             style: TextStyle(
              //                               fontSize: 16,
              //                               fontFamily: 'Roboto',
              //                             )),
              //
              //                         // Add more spans as needed...
              //                       ],
              //                     ),
              //                   ),
              //                 ),
              //                 actions: [
              //                   Center(
              //                       child: ElevatedButton(
              //                     style: ButtonStyle(
              //                       backgroundColor:
              //                           MaterialStateProperty.all<Color>(
              //                               Colors.blueAccent),
              //                     ),
              //                     onPressed: () {
              //                       Navigator.pop(context);
              //                     },
              //                     child: Text("Ok",
              //                         style: TextStyle(
              //                           color: Colors.white,
              //                           fontFamily: 'Roboto',
              //                           fontSize: 16,
              //                           fontWeight: FontWeight.bold,
              //                         )),
              //                   ))
              //                 ]);
              //           },
              //         );
              //       },
              //     ),
              //   ],
              // ),
              SizedBox(height: 10),
              Form(
                key: _formKey,
                child: Column(
                  children: [
                    buildTextField(bkashAccountController, 'Bkash Account No'),
                    buildTextField(
                        bkashTransactionIdController, 'Bkash Transaction ID'),
                    buildTextField(nameController, 'Name'),
                    buildTextField(phoneController, 'Phone Number'),
                    buildTextField(addressController, 'Address'),
                    buildTextField(districtController, 'District'),
                    buildTextField(nidController, 'NID/Birth Certificate No'),
                    buildDatePickerField(birthDateController, 'Date of Birth'),

                    // buildTextField(
                    //     areaController, 'Area (Local/Semi-Local/Overseas)'),
                    buildDropdownField(
                      selectedValue: selectedArea,
                      items: areaOptions,
                      label: 'Area',
                      onChanged: (val) {
                        setState(() {
                          selectedArea = val;
                        });
                      },
                    ),

                    buildDropdownField<String>(
                      selectedValue: selectedCategory,
                      items: categoryOptions,
                      label: 'category',
                      onChanged: (val) =>
                          setState(() => selectedCategory = val),
                    ),

                    buildDropdownField<String>(
                      selectedValue: selectedSpeciality,
                      items: specialityOptions,
                      label: 'Speciality',
                      onChanged: (val) =>
                          setState(() => selectedSpeciality = val),
                    ),
                  ],
                ),
              ),
              SizedBox(height: 10),
              Center(child: buildProfileImagePicker()),
              SizedBox(height: 10),
              Text('Upload Profile Photo',
                  style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500)),

              SizedBox(height: 20),
              ElevatedButton(
                style: ButtonStyle(
                  backgroundColor:
                      MaterialStateProperty.all<Color>(Colors.blueAccent),
                ),
                onPressed: submitForm,
                child: Text(
                  'Submit',
                  style: TextStyle(
                    color: Colors.white,
                    fontFamily: 'Roboto',
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget buildTextField(TextEditingController controller, String label) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6.0),
      child: TextFormField(
        controller: controller,
        decoration: InputDecoration(
          labelText: label,
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        validator: (val) => val == null || val.isEmpty ? 'Required' : null,
      ),
    );
  }

  Widget buildDropdownField<T>({
    required T? selectedValue,
    required List<T> items,
    required String label,
    required void Function(T?) onChanged,
  }) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6.0),
      child: DropdownButtonFormField<T>(
        value: selectedValue,
        decoration: InputDecoration(
          labelText: label,
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
          ),
        ),
        items: items
            .map((item) => DropdownMenuItem<T>(
                  value: item,
                  child: Text(item is Map
                      ? item['label'] // Map тЖТ show label
                      : item.toString()), // String/int тЖТ show itself
                ))
            .toList(),
        onChanged: onChanged,
        validator: (val) => val == null ? 'Required' : null,
      ),
    );
  }

  Widget buildDatePickerField(TextEditingController controller, String label) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6.0),
      child: TextFormField(
        controller: controller,
        readOnly: true,
        decoration: InputDecoration(
          labelText: label,
          border: OutlineInputBorder(
            borderRadius: BorderRadius.circular(8.0),
            borderSide: BorderSide(color: Colors.grey, width: 1.0),
          ),
          suffixIcon: const Icon(Icons.calendar_today),
        ),
        validator: (val) => val == null || val.isEmpty ? 'Required' : null,
        onTap: () async {
          final now = DateTime.now();
          final picked = await showDatePicker(
            context: context,
            initialDate: DateTime(now.year - 18), // sensible default
            firstDate: DateTime(1900),
            lastDate: now,
          );
          if (picked != null) {
            controller.text =
                '${picked.year}-${picked.month.toString().padLeft(2, '0')}-${picked.day.toString().padLeft(2, '0')}';
          }
        },
      ),
    );
  }

  Widget buildProfileImagePicker() {
    return Stack(
      children: [
        // Profile Image (or placeholder)
        CircleAvatar(
          radius: 60,
          backgroundColor: Colors.grey[300],
          backgroundImage: _webImageDataUrl != null
              ? NetworkImage(_webImageDataUrl!)
              : _chosenImage != null
                  ? FileImage(File(_chosenImage!.path)) as ImageProvider
                  : AssetImage('assets/sponsors/default1.png'), // placeholder
        ),

        // Camera icon button overlay
        Positioned(
          bottom: 0,
          right: 4,
          child: InkWell(
            onTap: selectImage,
            child: Container(
              padding: EdgeInsets.all(6),
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                color: Colors.blue,
              ),
              child: Icon(
                Icons.camera_alt,
                color: Colors.white,
                size: 20,
              ),
            ),
          ),
        ),
      ],
    );
  }
}
